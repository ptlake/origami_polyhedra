%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2022/dev)  Copyright 2021 Radical Eye Software
%%Title: fig.dvi
%%CreationDate: Mon Oct 16 19:27:10 2023
%%BoundingBox: 148 414 510 668
%%DocumentFonts: Dingbats
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E fig.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2023.10.16:1327
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /a2 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023D6F49484664AB80B9AFD9BF39026B697CABD0
FB7DA4F518B89AAB6DBBB6AFB0BF800AC36A626A773D24526FCDFAB25A4E52E7
0E7E7635044D18A2AA33D2C7D0028383C24816310BA1C06DD22AEA13C623191E
2ED5A81D91A822A8165D453AEE422EFF1054124357B24AB26A44A028C9C9DCBF
E53223D096351D214B3DC904C32B305DC77D70D0A3DE21CAB877D797C2B0A3D0
938486884E2083D636409679984282CC412D0F131CCDC15D09CD5F437BF4593B
1B1B3FFCAB2545DAA2A74E6DED08458EE7FB7F46EF460B8D1FA3AEB4AFA2DE71
172933BC23B3E4DE6BD052281B54C901F6B9A537AF6B73767F47865FF539877C
368E99C1260629F782996BE5A8040297C80939840A5B27CC4243FF5909C889EA
309E500C717BCBC6B86BC29653BBE1313CD85A2D47ACA8D56F3E5EF3BC1B932D
30570D54E0120FC80EDBA36CC2B96315572528C63416BE8EA4FB19D9AB1E2B8A
C52BF30B0DB3B23B526388CDCA9A6B00C44C69AF84579D01F39603AB0750BFE3
1D3C38B60E9D50076ADD89A32089891408195A557B6BF81E5170358516AAE754
80A85486D4F1F677252838C6BE9FD57D84556769DAFAA896E7678173E66C8D34
5054D039738712FFD04E77CD4F2264196D586DD87B1D0F7C9B808107F80A8DB9
CA159FE794660C338151F3D164BFA9EC6EE67AE06076EA64FCE0EE174E018A02
A33D1BECDB0F4EDEF43D1FF6ADC1CECBC94E9D02F319838A8050F040AE4A2017
4C6EC606020DB03AACF3E79253677660A637D8CC87E17625B187C727C7ECB195
04CA710E3AA9B9A71C6AEBCAB526C377DAE2CF9163B8EAE705196C53CC31A9CB
09225DB7A6612A15D8CFAB3D8CEC33388C867BD818DDA4D011E383B8767056DB
66A39AD9041C4F543A876B36FBC3F67FD2B385988A29875E7BF847845CD59DBC
609B1D9C856B5CB63D98FF56C0DB69492566D4324F085215F31494E8E5B9C0F7
93AA6584FC1F1CF8B75007478CCAAA8A1EC45A9C7915B9C3CE3C0FEC632A0FB9
9CFABD7F382087B4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (fig.dvi)
@start /Fa 221[199 34[{}1 206.559 /Dingbats rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 1258 2223 a Fa(")639
2540 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
3600 @rwi 2520 @rhi @setspecial
%%BeginDocument: test.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: test.tex
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Mon Oct 16 13:27:10 2023
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Oct 16 13:27:10 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LTb
0.00 0.00 0.00 C
2802 1021 M
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
stroke
LTw
% End plot #1
% Begin plot #2
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2802 264 M
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
stroke
LTw
% End plot #2
% Begin plot #3
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
3567 1021 M
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
stroke
LTw
% End plot #3
% Begin plot #4
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
3567 264 M
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
stroke
LTw
% End plot #4
% Begin plot #5
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
4331 1021 M
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
stroke
LTw
% End plot #5
% Begin plot #6
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
4331 264 M
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
stroke
LTw
% End plot #6
% Begin plot #7
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
3862 595 M
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-2 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-2 3 V
stroke
LTw
% End plot #7
% Begin plot #8
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
3567 1021 M
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-2 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 3 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
-3 2 V
stroke
LTw
% End plot #8
% Begin plot #9
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 1021 M
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
stroke
LTw
% End plot #9
% Begin plot #10
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 805 M
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
stroke
LTw
% End plot #10
% Begin plot #11
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 1021 M
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
stroke
LTw
% End plot #11
% Begin plot #12
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 264 M
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
stroke
LTw
% End plot #12
% Begin plot #13
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
5095 1021 M
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
0 39 V
0 38 V
0 38 V
0 39 V
0 38 V
stroke
LTw
% End plot #13
% Begin plot #14
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
5095 264 M
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
0 5 V
0 6 V
stroke
LTw
% End plot #14
% Begin plot #15
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 264 M
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
stroke
LTw
% End plot #15
% Begin plot #16
3.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C
2038 4819 M
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
stroke
LTw
% End plot #16
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
